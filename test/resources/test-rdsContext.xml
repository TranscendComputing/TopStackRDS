<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:oxm="http://www.springframework.org/schema/oxm"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:lang="http://www.springframework.org/schema/lang"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns="http://www.springframework.org/schema/beans"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd" >

 
    <import resource="cloud-config.xml" />
    <!-- inject rds util classes (helpers, etc.) -->
    <context:component-scan base-package="com.msi.tough.rdsquery" />
    <!-- inject core action classes (ActionTestHelper, etc.) -->
    <context:component-scan base-package="com.msi.tough.rds" />
    <!-- inject project action classes (Describe, etc.) -->
    <context:component-scan base-package="com.transcend.rds" />

    <!-- service definitions for RDS -->
		 
		<bean id="AuthorizeDBSecurityGroupIngressAction"
		    class="com.transcend.rds.actions.AuthorizeDBSecurityGroupIngressAction"/>
		
		<bean id="AuthorizeDBSecurityGroupIngressActionWorker"
		    class="com.transcend.rds.worker.AuthorizeDBSecurityGroupIngressActionWorker"/>
		 
		<bean id="CreateDBInstanceAction"
		    class="com.transcend.rds.actions.CreateDBInstanceAction"/>
		
		<bean id="CreateDBInstanceActionWorker"
		    class="com.transcend.rds.worker.CreateDBInstanceActionWorker"/>
		 
		<bean id="CreateDBInstanceReadReplicaAction"
		    class="com.transcend.rds.actions.CreateDBInstanceReadReplicaAction"/>
		
		<bean id="CreateDBInstanceReadReplicaActionWorker"
		    class="com.transcend.rds.worker.CreateDBInstanceReadReplicaActionWorker"/>
		 
		<bean id="CreateDBParameterGroupAction"
		    class="com.transcend.rds.actions.CreateDBParameterGroupAction"/>
		
		<bean id="CreateDBParameterGroupActionWorker"
		    class="com.transcend.rds.worker.CreateDBParameterGroupActionWorker"/>

		<bean id="CreateDBSecurityGroupAction"
		    class="com.transcend.rds.actions.CreateDBSecurityGroupAction"/>
		
		<bean id="CreateDBSecurityGroupActionWorker"
		    class="com.transcend.rds.worker.CreateDBSecurityGroupActionWorker"/>
		 
		<bean id="CreateDBSnapshotAction"
		    class="com.transcend.rds.actions.CreateDBSnapshotAction"/>
		
		<bean id="CreateDBSnapshotActionWorker"
		    class="com.transcend.rds.worker.CreateDBSnapshotActionWorker"/>
		 
		<bean id="CreateDBSubnetGroupAction"
		    class="com.transcend.rds.actions.CreateDBSubnetGroupAction"/>
		
		<bean id="CreateDBSubnetGroupActionWorker"
		    class="com.transcend.rds.worker.CreateDBSubnetGroupActionWorker"/>
		 
		<bean id="DeleteDBInstanceAction"
		    class="com.transcend.rds.actions.DeleteDBInstanceAction"/>
		
		<bean id="DeleteDBInstanceActionWorker"
		    class="com.transcend.rds.worker.DeleteDBInstanceActionWorker"/>
		 
		<bean id="DeleteDBParameterGroupAction"
		    class="com.transcend.rds.actions.DeleteDBParameterGroupAction"/>
		
		<bean id="DeleteDBParameterGroupActionWorker"
		    class="com.transcend.rds.worker.DeleteDBParameterGroupActionWorker"/>
		 
		<bean id="DeleteDBSecurityGroupAction"
		    class="com.transcend.rds.actions.DeleteDBSecurityGroupAction"/>
		
		<bean id="DeleteDBSecurityGroupActionWorker"
		    class="com.transcend.rds.worker.DeleteDBSecurityGroupActionWorker"/>
		 
		<bean id="DeleteDBSnapshotAction"
		    class="com.transcend.rds.actions.DeleteDBSnapshotAction"/>
		
		<bean id="DeleteDBSnapshotActionWorker"
		    class="com.transcend.rds.worker.DeleteDBSnapshotActionWorker"/>
		 
		<bean id="DeleteDBSubnetGroupAction"
		    class="com.transcend.rds.actions.DeleteDBSubnetGroupAction"/>
		
		<bean id="DeleteDBSubnetGroupActionWorker"
		    class="com.transcend.rds.worker.DeleteDBSubnetGroupActionWorker"/>
		 
		<bean id="DescribeDBEngineVersionsAction"
		    class="com.transcend.rds.actions.DescribeDBEngineVersionsAction"/>
		
		<bean id="DescribeDBEngineVersionsActionWorker"
		    class="com.transcend.rds.worker.DescribeDBEngineVersionsActionWorker"/>
		 
		<bean id="DescribeDBInstancesAction"
		    class="com.transcend.rds.actions.DescribeDBInstancesAction"/>
		
		<bean id="DescribeDBInstancesActionWorker"
		    class="com.transcend.rds.worker.DescribeDBInstancesActionWorker"/>
		 
		<bean id="DescribeDBParameterGroupsAction"
		    class="com.transcend.rds.actions.DescribeDBParameterGroupsAction"/>
		
		<bean id="DescribeDBParameterGroupsActionWorker"
		    class="com.transcend.rds.worker.DescribeDBParameterGroupsActionWorker"/>
		 
		<bean id="DescribeDBParametersAction"
		    class="com.transcend.rds.actions.DescribeDBParametersAction"/>
		
		<bean id="DescribeDBParametersActionWorker"
		    class="com.transcend.rds.worker.DescribeDBParametersActionWorker"/>
		 
		<bean id="DescribeDBSecurityGroupsAction"
		    class="com.transcend.rds.actions.DescribeDBSecurityGroupsAction"/>
		
		<bean id="DescribeDBSecurityGroupsActionWorker"
		    class="com.transcend.rds.worker.DescribeDBSecurityGroupsActionWorker"/>
		 
		<bean id="DescribeDBSnapshotsAction"
		    class="com.transcend.rds.actions.DescribeDBSnapshotsAction"/>
		
		<bean id="DescribeDBSnapshotsActionWorker"
		    class="com.transcend.rds.worker.DescribeDBSnapshotsActionWorker"/>
		 
		<bean id="DescribeDBSubnetGroupAction"
		    class="com.transcend.rds.actions.DescribeDBSubnetGroupAction"/>
		
		<bean id="DescribeDBSubnetGroupActionWorker"
		    class="com.transcend.rds.worker.DescribeDBSubnetGroupActionWorker"/>
		 
		<bean id="DescribeEngineDefaultParametersAction"
		    class="com.transcend.rds.actions.DescribeEngineDefaultParametersAction"/>
		
		<bean id="DescribeEngineDefaultParametersActionWorker"
		    class="com.transcend.rds.worker.DescribeEngineDefaultParametersActionWorker"/>
		 
		<bean id="DescribeEventsAction"
		    class="com.transcend.rds.actions.DescribeEventsAction"/>
		
		<bean id="DescribeEventsActionWorker"
		    class="com.transcend.rds.worker.DescribeEventsActionWorker"/>
		 
		<bean id="DescribeOrderableDBInstanceOptionsAction"
		    class="com.transcend.rds.actions.DescribeOrderableDBInstanceOptionsAction"/>
		
		<bean id="DescribeOrderableDBInstanceOptionsActionWorker"
		    class="com.transcend.rds.worker.DescribeOrderableDBInstanceOptionsActionWorker"/>
		 
		<bean id="DescribeReservedDBInstancesAction"
		    class="com.transcend.rds.actions.DescribeReservedDBInstancesAction"/>
		
		<bean id="DescribeReservedDBInstancesActionWorker"
		    class="com.transcend.rds.worker.DescribeReservedDBInstancesActionWorker"/>
		 
		<bean id="DescribeReservedDBInstancesOfferingsAction"
		    class="com.transcend.rds.actions.DescribeReservedDBInstancesOfferingsAction"/>
		
		<bean id="DescribeReservedDBInstancesOfferingsActionWorker"
		    class="com.transcend.rds.worker.DescribeReservedDBInstancesOfferingsActionWorker"/>
		 
		<bean id="ModifyDBInstanceAction"
		    class="com.transcend.rds.actions.ModifyDBInstanceAction"/>
		
		<bean id="ModifyDBInstanceActionWorker"
		    class="com.transcend.rds.worker.ModifyDBInstanceActionWorker"/>
		 
		<bean id="ModifyDBParameterGroupAction"
		    class="com.transcend.rds.actions.ModifyDBParameterGroupAction"/>
		
		<bean id="ModifyDBParameterGroupActionWorker"
		    class="com.transcend.rds.worker.ModifyDBParameterGroupActionWorker"/>
		 
		<bean id="ModifyDBSubnetGroupAction"
		    class="com.transcend.rds.actions.ModifyDBSubnetGroupAction"/>
		
		<bean id="ModifyDBSubnetGroupActionWorker"
		    class="com.transcend.rds.worker.ModifyDBSubnetGroupActionWorker"/>
		    
		<bean id="MountDBVolume"
		    class="com.transcend.rds.actions.MountDBVolume"/>
		    
		<bean id="MountDBVolumeWorker"
		    class="com.transcend.rds.worker.MountDBVolumeWorker"/>
		    
		<bean id="PurchaseReservedDBInstancesOfferingAction"
		    class="com.transcend.rds.actions.PurchaseReservedDBInstancesOfferingAction"/>
		
		<bean id="PurchaseReservedDBInstancesOfferingActionWorker"
		    class="com.transcend.rds.worker.PurchaseReservedDBInstancesOfferingActionWorker"/>
		 
		<bean id="RebootDBInstanceAction"
		    class="com.transcend.rds.actions.RebootDBInstanceAction"/>
		
		<bean id="RebootDBInstanceActionWorker"
		    class="com.transcend.rds.worker.RebootDBInstanceActionWorker"/>
		 
		<bean id="ResetDBParameterGroupAction"
		    class="com.transcend.rds.actions.ResetDBParameterGroupAction"/>
		
		<bean id="ResetDBParameterGroupActionWorker"
		    class="com.transcend.rds.worker.ResetDBParameterGroupActionWorker"/>
		 
		<bean id="RestoreDBInstanceFromDBSnapshotAction"
		    class="com.transcend.rds.actions.RestoreDBInstanceFromDBSnapshotAction"/>
		
		<bean id="RestoreDBInstanceFromDBSnapshotActionWorker"
		    class="com.transcend.rds.worker.RestoreDBInstanceFromDBSnapshotActionWorker"/>
		 
		<bean id="RestoreDBInstanceToPointInTimeAction"
		    class="com.transcend.rds.actions.RestoreDBInstanceToPointInTimeAction"/>
		
		<bean id="RestoreDBInstanceToPointInTimeActionWorker"
		    class="com.transcend.rds.worker.RestoreDBInstanceToPointInTimeActionWorker"/>
		 
		<bean id="RevokeDBSecurityGroupIngressAction"
		    class="com.transcend.rds.actions.RevokeDBSecurityGroupIngressAction"/>
		
		<bean id="RevokeDBSecurityGroupIngressActionWorker"
		    class="com.transcend.rds.worker.RevokeDBSecurityGroupIngressActionWorker"/>
		    
		<bean id="SignalCreateDBSnapshot"
		    class="com.transcend.rds.actions.SignalCreateDBSnapshot"/>
		
		<bean id="SignalCreateDBSnapshotWorker"
		    class="com.transcend.rds.worker.SignalCreateDBSnapshotWorker"/>

    <bean id="rdsServiceAsync"
        class="com.msi.tough.query.AsyncServiceImpl">
        <constructor-arg>
            <map>
                <entry key="AuthorizeDBSecurityGroupIngressAction" value-ref="AuthorizeDBSecurityGroupIngressAction"/>
				<entry key="CreateDBInstanceAction" value-ref="CreateDBInstanceAction"/>
				<entry key="CreateDBInstanceReadReplicaAction" value-ref="CreateDBInstanceReadReplicaAction"/>
				<entry key="CreateDBParameterGroupAction" value-ref="CreateDBParameterGroupAction"/>
				<entry key="CreateDBSecurityGroupAction" value-ref="CreateDBSecurityGroupAction"/>
				<entry key="CreateDBSnapshotAction" value-ref="CreateDBSnapshotAction"/>
				<entry key="CreateDBSubnetGroupAction" value-ref="CreateDBSubnetGroupAction"/>
				<entry key="DeleteDBInstanceAction" value-ref="DeleteDBInstanceAction"/>
				<entry key="DeleteDBParameterGroupAction" value-ref="DeleteDBParameterGroupAction"/>
				<entry key="DeleteDBSecurityGroupAction" value-ref="DeleteDBSecurityGroupAction"/>
				<entry key="DeleteDBSnapshotAction" value-ref="DeleteDBSnapshotAction"/>
				<entry key="DeleteDBSubnetGroupAction" value-ref="DeleteDBSubnetGroupAction"/>
				<entry key="DescribeDBEngineVersionsAction" value-ref="DescribeDBEngineVersionsAction"/>
				<entry key="DescribeDBInstancesAction" value-ref="DescribeDBInstancesAction"/>
				<entry key="DescribeDBParameterGroupsAction" value-ref="DescribeDBParameterGroupsAction"/>
				<entry key="DescribeDBParametersAction" value-ref="DescribeDBParametersAction"/>
				<entry key="DescribeDBSecurityGroupsAction" value-ref="DescribeDBSecurityGroupsAction"/>
				<entry key="DescribeDBSnapshotsAction" value-ref="DescribeDBSnapshotsAction"/>
				<entry key="DescribeDBSubnetGroupAction" value-ref="DescribeDBSubnetGroupAction"/>
				<entry key="DescribeEngineDefaultParametersAction" value-ref="DescribeEngineDefaultParametersAction"/>
				<entry key="DescribeEventsAction" value-ref="DescribeEventsAction"/>
				<entry key="DescribeOrderableDBInstanceOptionsAction" value-ref="DescribeOrderableDBInstanceOptionsAction"/>
				<entry key="DescribeReservedDBInstancesAction" value-ref="DescribeReservedDBInstancesAction"/>
				<entry key="DescribeReservedDBInstancesOfferingsAction" value-ref="DescribeReservedDBInstancesOfferingsAction"/>
				<entry key="ModifyDBInstanceAction" value-ref="ModifyDBInstanceAction"/>
				<entry key="ModifyDBParameterGroupAction" value-ref="ModifyDBParameterGroupAction"/>
				<entry key="ModifyDBSubnetGroupAction" value-ref="ModifyDBSubnetGroupAction"/>
				<entry key="MountDBVolume" value-ref="MountDBVolume"/>
				<entry key="PurchaseReservedDBInstancesOfferingAction" value-ref="PurchaseReservedDBInstancesOfferingAction"/>
				<entry key="RebootDBInstanceAction" value-ref="RebootDBInstanceAction"/>
				<entry key="ResetDBParameterGroupAction" value-ref="ResetDBParameterGroupAction"/>
				<entry key="RestoreDBInstanceFromDBSnapshotAction" value-ref="RestoreDBInstanceFromDBSnapshotAction"/>
				<entry key="RestoreDBInstanceToPointInTimeAction" value-ref="RestoreDBInstanceToPointInTimeAction"/>
				<entry key="RevokeDBSecurityGroupIngressAction" value-ref="RevokeDBSecurityGroupIngressAction"/>
  				<entry key="SignalCreateDBSnapshot" value-ref="SignalCreateDBSnapshot"/>
              
            </map>
        </constructor-arg>
    </bean>
      
    <bean class="com.msi.tough.core.AppctxInjector"/>
        
    <!-- ============================== -->
    <bean id="servicesPropertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
                <list>
                        <value>classpath*:/*.properties</value>
                </list>
        </property>
    </bean>
    
        <bean id="endpoint" class="java.lang.String">
        <constructor-arg value="ActionIn"/>
    </bean>
    <bean id="rawEndpoint" class="java.lang.String">
        <constructor-arg value="DirectToZMQEntry"/>
    </bean>

    <bean id="workflow" factory-method="getInstance"
    class="com.msi.tough.workflow.core.MuleWorkflow">
    </bean>

    <bean id="actionHelper" class="com.msi.tough.query.ActionHelper">
    </bean>

    <bean
        id="log4jInitializer"
        class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">

        <property
            name="targetClass"
            value="org.springframework.util.Log4jConfigurer" />

        <property name="targetMethod" value="initLogging" />

        <property name="arguments" >
            <list>
                <value>classpath:log4j.xml</value>
            </list>
        </property>
    </bean>
    
    <bean id="accessKey" class="java.lang.String">
        <constructor-arg value="${test.accessKey}"/>
    </bean>

    <bean id="secretKey" class="java.lang.String">
        <constructor-arg value="${test.secretKey}"/>
    </bean>
    
    <bean id="testAccountId" class="java.lang.Long">
        <constructor-arg value="1"/>
    </bean>
    
       <bean id="limitedQuotaAccessKey" class="java.lang.String">
        <constructor-arg value="${test.limitedQuotaAccessKey}"/>
    </bean>

    <bean id="limitedQuotaSecretKey" class="java.lang.String">
        <constructor-arg value="${test.limitedQuotaSecretKey}"/>
    </bean>

    <bean id="limitedQuotaOwnerId" class="java.lang.String">
        <constructor-arg value="${test.limitedQuotaOwnerId}"/>
    </bean>

    <bean id="limitedQuotaZone" class="java.lang.String">
        <constructor-arg value="${test.limitedQuotaZone}"/>
    </bean>

    <bean id="rdsQueryUtil" class="com.msi.tough.rdsquery.RDSQueryUtil" >
    </bean>

    <bean id="basicAWSCredentials" class="com.amazonaws.auth.BasicAWSCredentials" >
        <constructor-arg value="${test.accessKey}" />
        <constructor-arg value="${test.secretKey}" />
    </bean>

    <bean id="badAWSCredentials" class="com.amazonaws.auth.BasicAWSCredentials" >
        <constructor-arg value="123412341234" />
        <constructor-arg value="456456456456" />
    </bean>

    <bean id="rdsClient" class="com.amazonaws.services.rds.AmazonRDSClient" >
        <constructor-arg ref="basicAWSCredentials" />
        <property name="endpoint" value="http://${deploy.ip}:8080/RDSQuery/" />
    </bean>

    <bean id="rdsClientBadCreds" class="com.amazonaws.services.rds.AmazonRDSClient" >
        <constructor-arg ref="badAWSCredentials" />
        <property name="endpoint" value="http://${deploy.ip}:8080/RDSQuery/" />
    </bean>
    
	<bean id="targetServer" class="java.lang.String">
		<constructor-arg value="${deploy.ip}"/>
	</bean>


	<bean id="defaultAvailabilityZone" class="java.lang.String">
		<constructor-arg>
		<value>${default.availability.zone}</value>
		</constructor-arg>
	</bean>
	<bean id="DB_URL" class="java.lang.String">
		<constructor-arg value="jdbc:mysql://${deploy.ip}:3306/msi?autoReconnect=true"></constructor-arg>
	</bean>
	<bean id="DB_USERNAME" class="java.lang.String">
		<constructor-arg value="msi"></constructor-arg>
	</bean>
	<bean id="DB_PASSWORD" class="java.lang.String">
		<constructor-arg value="msi"></constructor-arg>
	</bean>
	
	<!-- Compute setup used to obtain EC2 security groups -->
	<bean id="computeClient" class="com.amazonaws.services.ec2.AmazonEC2Client" >
        <constructor-arg ref="basicAWSCredentials" />
        <property name="endpoint" value="#{ defaultAvailabilityZone == 'us-east-1a' ? 'http://ec2.us-east-1.amazonaws.com/' : 'http://${deploy.ip}:8080/Compute/comp-async/' }" />
    </bean>
	
	<bean id="runningDBInstanceHelper" class="com.msi.rdsquery.helper.RunningDBInstanceHelper" >
    </bean>
    
    <bean id="dbSnapshotHelper" class="com.msi.rdsquery.helper.DBSnapshotHelper" >
    </bean>
    
    <bean id="SecurityGroupsHelper" class="com.msi.rdsquery.helper.SecurityGroupsHelper" >
    </bean>
	
	<!-- stand-in for full cloud config, with only the current test. -->
    <util:map id="configuration0">
        <entry key="KEYS_DIR" value="."/>
        <entry key="AvailabilityZone" value="${default.availability.zone}"/>
    </util:map>

    <bean id="configuration" factory-method="merge" class="com.msi.tough.core.MapUtil">
        <constructor-arg ref="cloud-config"></constructor-arg>
        <constructor-arg ref="configuration0"></constructor-arg>
    </bean>
    
    <bean id="appctx" factory-method="getInstanceForInjection"
        class="com.msi.tough.core.Appctx">
        <property name="configuration" ref="configuration"/>
        <!-- use a single thread executor, so tests don't have to wait. -->
        <property name="executorServiceInstance">
            <bean class="com.msi.tough.utils.SynchronousExecutor"/>
        </property>
    </bean> 
    
    <bean class="com.msi.tough.core.AppctxInjector"/>
    
	<bean id="mysql_check" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" ref="DB_URL" />
		<property name="username" ref="DB_USERNAME" />
		<property name="password" ref="DB_PASSWORD" />
		<property name="defaultAutoCommit" value="false"></property>
		<property name="initialSize" value="1"></property>
		<property name="maxActive" value="20"></property>
		<property name="testWhileIdle" value="true"></property>
		<property name="testOnBorrow" value="true"></property>
		<property name="testOnReturn" value="false"></property>
		<property name="validationQuery" value="SELECT 1"></property>
		<!-- <property name="validationInterval" value="30000"></property> -->
		<property name="timeBetweenEvictionRunsMillis" value="5000"></property>
		<property name="minIdle" value="1"></property>
		<property name="maxWait" value="10000"></property>
		<property name="removeAbandonedTimeout" value="60"></property>
		<property name="removeAbandoned" value="true"></property>
		<property name="LogAbandoned" value="true"></property>
	</bean>
	
	<!-- ============================== -->
    <bean id="testDS" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="${flyway.url}" />
        <property name="username" value="${flyway.user}" />
        <property name="password" value="${flyway.password}" />
        <property name="defaultAutoCommit" value="false"></property>
        <property name="initialSize" value="1"></property>
        <property name="maxActive" value="20"></property>
        <property name="testWhileIdle" value="true"></property>
        <property name="testOnBorrow" value="true"></property>
        <property name="testOnReturn" value="false"></property>
        <property name="validationQuery" value="SELECT 1"></property>
        <property name="timeBetweenEvictionRunsMillis" value="5000"></property>
        <property name="minIdle" value="1"></property>
        <property name="maxWait" value="10000"></property>
        <property name="removeAbandonedTimeout" value="60"></property>
        <property name="removeAbandoned" value="true"></property>
        <property name="LogAbandoned" value="true"></property>
    </bean>
    
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="testDS" />
        <property name="configLocations">
            <list>
                <value>classpath:hibernate.cfg.xml</value>
            </list>
        </property>
        <property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration"></property>
        <property name="hibernateProperties">
            <value>hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
                hibernate.current_session_context_class=thread
                hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider
                hibernate.show_sql=false
                hibernate.hbm2ddl.auto=update
            </value>
        </property>
    </bean>
    <bean id="hibernateUtil"
        class="com.msi.tough.core.HibernateUtil">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
</beans>